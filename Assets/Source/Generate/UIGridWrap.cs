//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIGridWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UIGrid), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Awake", Awake);
		L.RegFunction("SetElementCount", SetElementCount);
		L.RegFunction("SetElementSize", SetElementSize);
		L.RegFunction("SetIsVertical", SetIsVertical);
		L.RegFunction("SetConstraintCount", SetConstraintCount);
		L.RegFunction("ApplySetting", ApplySetting);
		L.RegFunction("ClearSetting", ClearSetting);
		L.RegFunction("GetElementCount", GetElementCount);
		L.RegFunction("GetElementWidth", GetElementWidth);
		L.RegFunction("GetElementHeight", GetElementHeight);
		L.RegFunction("GetColumnCount", GetColumnCount);
		L.RegFunction("GetRowCount", GetRowCount);
		L.RegFunction("GetConstraintCount", GetConstraintCount);
		L.RegFunction("IsVertical", IsVertical);
		L.RegFunction("GetScrollRect", GetScrollRect);
		L.RegFunction("GetIndexStart", GetIndexStart);
		L.RegFunction("GetIndexEnd", GetIndexEnd);
		L.RegFunction("GetShowCount", GetShowCount);
		L.RegFunction("GetCurrentPos", GetCurrentPos);
		L.RegFunction("SetCurrentPos", SetCurrentPos);
		L.RegFunction("AddNewElementListener", AddNewElementListener);
		L.RegFunction("RemoveNewElementListener", RemoveNewElementListener);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("_element", get__element, set__element);
		L.RegVar("_scrollRect", get__scrollRect, set__scrollRect);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Awake(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			obj.Awake();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetElementCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetElementCount(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetElementSize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.SetElementSize(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetIsVertical(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetIsVertical(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetConstraintCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetConstraintCount(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ApplySetting(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			obj.ApplySetting();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearSetting(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			obj.ClearSetting();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetElementCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			int o = obj.GetElementCount();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetElementWidth(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			float o = obj.GetElementWidth();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetElementHeight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			float o = obj.GetElementHeight();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetColumnCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			int o = obj.GetColumnCount();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetRowCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			int o = obj.GetRowCount();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetConstraintCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			int o = obj.GetConstraintCount();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsVertical(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			bool o = obj.IsVertical();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetScrollRect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			UnityEngine.UI.ScrollRect o = obj.GetScrollRect();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetIndexStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			int o = obj.GetIndexStart();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetIndexEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			int o = obj.GetIndexEnd();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetShowCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			int o = obj.GetShowCount();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCurrentPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			float o = obj.GetCurrentPos();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCurrentPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetCurrentPos(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddNewElementListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			UnityEngine.Events.UnityAction<UnityEngine.GameObject> arg0 = (UnityEngine.Events.UnityAction<UnityEngine.GameObject>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<UnityEngine.GameObject>>(L, 2);
			obj.AddNewElementListener(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveNewElementListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIGrid obj = (UIGrid)ToLua.CheckObject<UIGrid>(L, 1);
			UnityEngine.Events.UnityAction<UnityEngine.GameObject> arg0 = (UnityEngine.Events.UnityAction<UnityEngine.GameObject>)ToLua.CheckDelegate<UnityEngine.Events.UnityAction<UnityEngine.GameObject>>(L, 2);
			obj.RemoveNewElementListener(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__element(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIGrid obj = (UIGrid)o;
			UIGridElement ret = obj._element;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _element on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__scrollRect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIGrid obj = (UIGrid)o;
			UnityEngine.UI.ScrollRect ret = obj._scrollRect;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _scrollRect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__element(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIGrid obj = (UIGrid)o;
			UIGridElement arg0 = (UIGridElement)ToLua.CheckObject<UIGridElement>(L, 2);
			obj._element = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _element on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__scrollRect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UIGrid obj = (UIGrid)o;
			UnityEngine.UI.ScrollRect arg0 = (UnityEngine.UI.ScrollRect)ToLua.CheckObject<UnityEngine.UI.ScrollRect>(L, 2);
			obj._scrollRect = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _scrollRect on a nil value");
		}
	}
}

